{"version":3,"sources":["components/Card.js","config/icons.js","components/Cards.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Card","icon","hidden","handelCardClick","removed","className","onClick","Cards","gameStart","gameOver","setGameOver","shuffle","setGameStart","array","i","length","j","Math","floor","random","useState","icons","shuffledIcons","gameCards","setGameCards","openCards","setOpenCards","useEffect","cards","inGameCards","slice","generateGameCards","cardsToPlay","map","cardIcon","index","key","card","filter","setTimeout","cardPresent","Game","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7cd40b6.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Card({ icon, hidden, handelCardClick, removed }) {\n\treturn removed ? (\n\t\t<div className='card'></div>\n\t) : (\n\t\t<div className='card' onClick={handelCardClick}>\n\t\t\t<div className={!hidden ? 'card-inner card-flip' : 'card-inner'}>\n\t\t\t\t<div className='card-front'></div>\n\t\t\t\t<div className='card-back'>{icon}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;\n","import React from 'react';\n\nimport {\n\tFa500Px,\n\tFaAdobe,\n\tFaAirbnb,\n\tFaAmazon,\n\tFaAndroid,\n\tFaAngular,\n\tFaAppStore,\n\tFaApple,\n\tFaAudible,\n\tFaBehance,\n\tFaDev,\n\tFaDiscord,\n\tFaDocker,\n\tFaDribbble,\n\tFaEdge,\n\tFaEvernote,\n\tFaFacebook,\n\tFaFedex,\n\tFaFigma,\n\tFaFlickr,\n\tFaFortAwesomeAlt,\n\tFaFreeCodeCamp,\n\tFaGetPocket,\n\tFaGithub,\n\tFaGoogle,\n\tFaHackerNews,\n\tFaInstagram,\n\tFaInternetExplorer,\n\tFaInvision,\n\tFaJava,\n\tFaJs,\n\tFaKickstarter,\n\tFaLinkedin,\n\tFaLinux,\n\tFaMedium,\n\tFaNodeJs,\n\tFaNintendoSwitch,\n\tFaPinterest,\n\tFaRaspberryPi,\n\tFaReact,\n\tFaRedditAlien,\n\tFaSass,\n\tFaSkype,\n\tFaSlack,\n\tFaSpotify,\n\tFaStackOverflow,\n\tFaTrello,\n\tFaTwitter,\n\tFaUbuntu,\n\tFaVimeoV,\n\tFaWindows,\n} from 'react-icons/fa';\n\nexport default [\n\t<Fa500Px />,\n\t<FaAdobe />,\n\t<FaAirbnb />,\n\t<FaAmazon />,\n\t<FaAndroid />,\n\t<FaAngular />,\n\t<FaAppStore />,\n\t<FaApple />,\n\t<FaAudible />,\n\t<FaBehance />,\n\t<FaDev />,\n\t<FaDiscord />,\n\t<FaDocker />,\n\t<FaDribbble />,\n\t<FaEdge />,\n\t<FaEvernote />,\n\t<FaFacebook />,\n\t<FaFedex />,\n\t<FaFigma />,\n\t<FaFlickr />,\n\t<FaFortAwesomeAlt />,\n\t<FaFreeCodeCamp />,\n\t<FaGetPocket />,\n\t<FaGithub />,\n\t<FaGoogle />,\n\t<FaHackerNews />,\n\t<FaInstagram />,\n\t<FaInternetExplorer />,\n\t<FaInvision />,\n\t<FaJava />,\n\t<FaJs />,\n\t<FaKickstarter />,\n\t<FaLinkedin />,\n\t<FaLinux />,\n\t<FaMedium />,\n\t<FaNodeJs />,\n\t<FaNintendoSwitch />,\n\t<FaPinterest />,\n\t<FaRaspberryPi />,\n\t<FaReact />,\n\t<FaRedditAlien />,\n\t<FaSass />,\n\t<FaSkype />,\n\t<FaSlack />,\n\t<FaSpotify />,\n\t<FaStackOverflow />,\n\t<FaTrello />,\n\t<FaTwitter />,\n\t<FaUbuntu />,\n\t<FaVimeoV />,\n\t<FaWindows />,\n];\n","import React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport icons from '../config/icons';\n\nfunction Cards({ gameStart, gameOver, setGameOver, setGameStart }) {\n\t// shuffle any array\n\tconst shuffle = (array) => {\n\t\tfor (let i = array.length - 1; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t\t[array[i], array[j]] = [array[j], array[i]];\n\t\t}\n\n\t\treturn array;\n\t};\n\n\t// get random shuffles list of icons\n\tconst [shuffledIcons] = useState(() => shuffle(icons));\n\t// the set of cards for the game\n\tconst [gameCards, setGameCards] = useState([]);\n\t// keep track of open cards\n\tconst [openCards, setOpenCards] = useState([]);\n\n\t// generate cards for the game\n\tuseEffect(() => {\n\t\t// convert card array to object\n\t\tconst mapCardsToObject = (array) => {\n\t\t\treturn array.map((cardIcon, index) => ({\n\t\t\t\ticon: cardIcon,\n\t\t\t\thidden: false,\n\t\t\t\tkey: index,\n\t\t\t\tremoved: false,\n\t\t\t}));\n\t\t};\n\n\t\t// generate a pair of 8 cards for the game\n\t\tconst generateGameCards = (array) => {\n\t\t\tconst inGameCards = array.slice(0, 8);\n\t\t\treturn shuffle([...inGameCards, ...inGameCards]);\n\t\t};\n\n\t\tif (shuffledIcons) {\n\t\t\tconst cards = generateGameCards(shuffledIcons);\n\t\t\tconst cardsToPlay = mapCardsToObject(cards);\n\t\t\tsetGameCards(cardsToPlay);\n\t\t}\n\t}, [shuffledIcons]);\n\n\t// turn over all cards when game starts\n\tuseEffect(() => {\n\t\tif (gameStart) {\n\t\t\tsetGameCards((cards) =>\n\t\t\t\tcards.map((card) => ({\n\t\t\t\t\t...card,\n\t\t\t\t\thidden: true,\n\t\t\t\t}))\n\t\t\t);\n\t\t}\n\t}, [gameStart]);\n\n\t// keep track of open cards\n\tuseEffect(() => {\n\t\t// check if cards match\n\t\tconst checkCardsMatch = () => {\n\t\t\tif (openCards[0].icon === openCards[1].icon) {\n\t\t\t\t// remove cards\n\t\t\t\tsetGameCards((gameCards) =>\n\t\t\t\t\tgameCards.map((card) => {\n\t\t\t\t\t\tif (card.icon === openCards[0].icon) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...card,\n\t\t\t\t\t\t\t\tremoved: true,\n\t\t\t\t\t\t\t\thidden: true,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...card,\n\t\t\t\t\t\t\thidden: true,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\t// clear open cards array\n\t\t\t\tsetOpenCards([]);\n\t\t\t} else {\n\t\t\t\t// clear cards array\n\t\t\t\tsetOpenCards([]);\n\t\t\t\t// fold open cards\n\t\t\t\tsetGameCards((gameCards) =>\n\t\t\t\t\tgameCards.map((card) => ({\n\t\t\t\t\t\t...card,\n\t\t\t\t\t\thidden: true,\n\t\t\t\t\t}))\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t// if open card length is 2, check if cards match\n\t\tif (openCards.length > 2) {\n\t\t\tcheckCardsMatch();\n\t\t}\n\t}, [openCards]);\n\n\t// keep track of gameCards\n\tuseEffect(() => {\n\t\tconst cardsLeft = gameCards.filter((cards) => !cards.removed);\n\t\tif (cardsLeft.length === 2) {\n\t\t\tsetGameOver(true);\n\t\t}\n\t}, [gameCards, setGameOver]);\n\n\t// when game is over\n\tuseEffect(() => {\n\t\tif (gameOver) {\n\t\t\t// reveal the last 2 cards\n\t\t\tsetGameCards((gameCards) =>\n\t\t\t\tgameCards.map((card) => ({\n\t\t\t\t\t...card,\n\t\t\t\t\thidden: !card.hidden,\n\t\t\t\t}))\n\t\t\t);\n\n\t\t\t// remove all cards\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetGameCards((gameCards) =>\n\t\t\t\t\tgameCards.map((card) => ({\n\t\t\t\t\t\t...card,\n\t\t\t\t\t\tremoved: true,\n\t\t\t\t\t}))\n\t\t\t\t);\n\t\t\t}, 2000);\n\t\t}\n\t}, [gameOver]);\n\n\t// when a cards is clicked\n\tconst handelCardClick = (key) => {\n\t\t// turn the cards\n\t\tsetGameCards((cards) =>\n\t\t\tcards.map((card, index) => {\n\t\t\t\tif (key === index) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...card,\n\t\t\t\t\t\thidden: !card.hidden,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...card,\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\n\t\tif (!cardPresent(gameCards[key])) {\n\t\t\t// add cards to open list\n\t\t\tsetOpenCards([...openCards, gameCards[key]]);\n\t\t}\n\t};\n\n\t// check if selected card is present in openCards array\n\tconst cardPresent = (card) => {\n\t\tif (openCards.length > 0) {\n\t\t\tif (openCards[0].key === card.key) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='cards'>\n\t\t\t{gameCards.map((card, index) => (\n\t\t\t\t<Card\n\t\t\t\t\ticon={card.icon}\n\t\t\t\t\thidden={card.hidden}\n\t\t\t\t\tkey={index}\n\t\t\t\t\tremoved={card.removed}\n\t\t\t\t\thandelCardClick={() => {\n\t\t\t\t\t\thandelCardClick(index);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default Cards;\n","import React, { useState } from 'react';\nimport Cards from './Cards';\n\nfunction Game() {\n\tconst [gameStart, setGameStart] = useState(false);\n\tconst [gameOver, setGameOver] = useState(false);\n\n\treturn (\n\t\t<div className='game-container'>\n\t\t\t<div\n\t\t\t\tclassName={gameStart ? 'overlay hidden' : 'overlay'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (!gameStart) {\n\t\t\t\t\t\tsetGameStart(true);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t></div>\n\t\t\t<Cards\n\t\t\t\tgameStart={gameStart}\n\t\t\t\tgameOver={gameOver}\n\t\t\t\tsetGameOver={setGameOver}\n\t\t\t\tsetGameStart={setGameStart}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './components/Game';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Game />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Card.js","config/icons.js","components/Cards.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Card","icon","hidden","handelCardClick","removed","className","onClick","Cards","state","dispatch","shuffle","array","console","log","i","length","j","Math","floor","random","useState","icons","shuffledIcons","setShuffledIcons","gameCards","setGameCards","openCards","setOpenCards","useEffect","gameReset","cards","inGameCards","slice","generateGameCards","cardsToPlay","map","cardIcon","index","key","gameStart","card","filter","type","payload","gameOver","setTimeout","cardPresent","initialState","reducer","action","Game","useReducer","App","href","target","rel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.51176448.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Card({ icon, hidden, handelCardClick, removed }) {\n\treturn removed ? (\n\t\t<div className='card'></div>\n\t) : (\n\t\t<div className='card' onClick={handelCardClick}>\n\t\t\t<div className={!hidden ? 'card-inner card-flip' : 'card-inner'}>\n\t\t\t\t<div className='card-front'></div>\n\t\t\t\t<div className='card-back'>{icon}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;\n","import React from 'react';\n\nimport {\n\tFa500Px,\n\tFaAdobe,\n\tFaAirbnb,\n\tFaAmazon,\n\tFaAndroid,\n\tFaAngular,\n\tFaAppStore,\n\tFaApple,\n\tFaAudible,\n\tFaBehance,\n\tFaDev,\n\tFaDiscord,\n\tFaDocker,\n\tFaDribbble,\n\tFaEdge,\n\tFaEvernote,\n\tFaFacebook,\n\tFaFedex,\n\tFaFigma,\n\tFaFlickr,\n\tFaFortAwesomeAlt,\n\tFaFreeCodeCamp,\n\tFaGetPocket,\n\tFaGithub,\n\tFaGoogle,\n\tFaHackerNews,\n\tFaInstagram,\n\tFaInternetExplorer,\n\tFaInvision,\n\tFaJava,\n\tFaJs,\n\tFaKickstarter,\n\tFaLinkedin,\n\tFaLinux,\n\tFaMedium,\n\tFaNodeJs,\n\tFaNintendoSwitch,\n\tFaPinterest,\n\tFaRaspberryPi,\n\tFaReact,\n\tFaRedditAlien,\n\tFaSass,\n\tFaSkype,\n\tFaSlack,\n\tFaSpotify,\n\tFaStackOverflow,\n\tFaTrello,\n\tFaTwitter,\n\tFaUbuntu,\n\tFaVimeoV,\n\tFaWindows,\n} from 'react-icons/fa';\n\nexport default [\n\t<Fa500Px />,\n\t<FaAdobe />,\n\t<FaAirbnb />,\n\t<FaAmazon />,\n\t<FaAndroid />,\n\t<FaAngular />,\n\t<FaAppStore />,\n\t<FaApple />,\n\t<FaAudible />,\n\t<FaBehance />,\n\t<FaDev />,\n\t<FaDiscord />,\n\t<FaDocker />,\n\t<FaDribbble />,\n\t<FaEdge />,\n\t<FaEvernote />,\n\t<FaFacebook />,\n\t<FaFedex />,\n\t<FaFigma />,\n\t<FaFlickr />,\n\t<FaFortAwesomeAlt />,\n\t<FaFreeCodeCamp />,\n\t<FaGetPocket />,\n\t<FaGithub />,\n\t<FaGoogle />,\n\t<FaHackerNews />,\n\t<FaInstagram />,\n\t<FaInternetExplorer />,\n\t<FaInvision />,\n\t<FaJava />,\n\t<FaJs />,\n\t<FaKickstarter />,\n\t<FaLinkedin />,\n\t<FaLinux />,\n\t<FaMedium />,\n\t<FaNodeJs />,\n\t<FaNintendoSwitch />,\n\t<FaPinterest />,\n\t<FaRaspberryPi />,\n\t<FaReact />,\n\t<FaRedditAlien />,\n\t<FaSass />,\n\t<FaSkype />,\n\t<FaSlack />,\n\t<FaSpotify />,\n\t<FaStackOverflow />,\n\t<FaTrello />,\n\t<FaTwitter />,\n\t<FaUbuntu />,\n\t<FaVimeoV />,\n\t<FaWindows />,\n];\n","import React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport icons from '../config/icons';\n\nfunction Cards({ state, dispatch }) {\n\t// shuffle any array\n\tconst shuffle = (array) => {\n\t\tconsole.log('shuffling');\n\t\tfor (let i = array.length - 1; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t\t[array[i], array[j]] = [array[j], array[i]];\n\t\t}\n\n\t\treturn array;\n\t};\n\n\t// get random shuffles list of icons\n\tconst [shuffledIcons, setShuffledIcons] = useState(() => shuffle(icons));\n\t// the set of cards for the game\n\tconst [gameCards, setGameCards] = useState([]);\n\t// keep track of open cards\n\tconst [openCards, setOpenCards] = useState([]);\n\n\tuseEffect(() => {\n\t\tif (state.gameReset) {\n\t\t\tsetShuffledIcons(shuffle(icons));\n\t\t}\n\t}, [state.gameReset]);\n\n\t// generate cards for the game [shuffledIcons]\n\tuseEffect(() => {\n\t\t// convert card array to object\n\t\tconst mapCardsToObject = (array) => {\n\t\t\treturn array.map((cardIcon, index) => ({\n\t\t\t\ticon: cardIcon,\n\t\t\t\thidden: false,\n\t\t\t\tkey: index,\n\t\t\t\tremoved: false,\n\t\t\t}));\n\t\t};\n\n\t\t// generate a pair of 8 cards for the game\n\t\tconst generateGameCards = (array) => {\n\t\t\tconst inGameCards = array.slice(0, 8);\n\t\t\treturn shuffle([...inGameCards, ...inGameCards]);\n\t\t};\n\n\t\tif (shuffledIcons) {\n\t\t\tconst cards = generateGameCards(shuffledIcons);\n\t\t\tconst cardsToPlay = mapCardsToObject(cards);\n\t\t\tsetGameCards(cardsToPlay);\n\t\t}\n\t}, [shuffledIcons]);\n\n\t// turn over all cards when game starts [gameStart]\n\tuseEffect(() => {\n\t\tif (state.gameStart) {\n\t\t\tsetGameCards((cards) =>\n\t\t\t\tcards.map((card) => ({\n\t\t\t\t\t...card,\n\t\t\t\t\thidden: true,\n\t\t\t\t}))\n\t\t\t);\n\t\t}\n\t}, [state.gameStart]);\n\n\t// keep track of open cards [openCards]\n\tuseEffect(() => {\n\t\t// check if cards match\n\t\tconst checkCardsMatch = () => {\n\t\t\tif (openCards[0].icon === openCards[1].icon) {\n\t\t\t\t// remove cards\n\t\t\t\tsetGameCards((gameCards) =>\n\t\t\t\t\tgameCards.map((card) => {\n\t\t\t\t\t\tif (card.icon === openCards[0].icon) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...card,\n\t\t\t\t\t\t\t\tremoved: true,\n\t\t\t\t\t\t\t\thidden: true,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...card,\n\t\t\t\t\t\t\thidden: true,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\t// clear open cards array\n\t\t\t\tsetOpenCards([]);\n\t\t\t} else {\n\t\t\t\t// clear cards array\n\t\t\t\tsetOpenCards([]);\n\t\t\t\t// fold open cards\n\t\t\t\tsetGameCards((gameCards) =>\n\t\t\t\t\tgameCards.map((card) => ({\n\t\t\t\t\t\t...card,\n\t\t\t\t\t\thidden: true,\n\t\t\t\t\t}))\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t// if open card length is 2, check if cards match\n\t\tif (openCards.length > 2) {\n\t\t\tcheckCardsMatch();\n\t\t}\n\t}, [openCards]);\n\n\t// keep track of gameCards [gameCards, setGameOver]\n\tuseEffect(() => {\n\t\tconst cardsLeft = gameCards.filter((cards) => !cards.removed);\n\t\tif (cardsLeft.length === 2) {\n\t\t\tdispatch({ type: 'OVER', payload: true });\n\t\t}\n\t}, [gameCards, dispatch]);\n\n\t// when game is over [gameOver]\n\tuseEffect(() => {\n\t\tif (state.gameOver) {\n\t\t\t// reveal the last 2 cards\n\t\t\tsetGameCards((gameCards) =>\n\t\t\t\tgameCards.map((card) => ({\n\t\t\t\t\t...card,\n\t\t\t\t\thidden: !card.hidden,\n\t\t\t\t}))\n\t\t\t);\n\n\t\t\t// remove all cards\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetGameCards((gameCards) =>\n\t\t\t\t\tgameCards.map((card) => ({\n\t\t\t\t\t\t...card,\n\t\t\t\t\t\tremoved: true,\n\t\t\t\t\t}))\n\t\t\t\t);\n\t\t\t\tdispatch({ type: 'RESET', payload: true });\n\t\t\t}, 2000);\n\t\t}\n\t}, [state.gameOver, dispatch]);\n\n\t// when a cards is clicked\n\tconst handelCardClick = (key) => {\n\t\t// turn the cards\n\t\tsetGameCards((cards) =>\n\t\t\tcards.map((card, index) => {\n\t\t\t\tif (key === index) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...card,\n\t\t\t\t\t\thidden: !card.hidden,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...card,\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\n\t\tif (!cardPresent(gameCards[key])) {\n\t\t\t// add cards to open list\n\t\t\tsetOpenCards([...openCards, gameCards[key]]);\n\t\t}\n\t};\n\n\t// check if selected card is present in openCards array\n\tconst cardPresent = (card) => {\n\t\tif (openCards.length > 0) {\n\t\t\tif (openCards[0].key === card.key) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='cards'>\n\t\t\t{gameCards.map((card, index) => (\n\t\t\t\t<Card\n\t\t\t\t\ticon={card.icon}\n\t\t\t\t\thidden={card.hidden}\n\t\t\t\t\tkey={index}\n\t\t\t\t\tremoved={card.removed}\n\t\t\t\t\thandelCardClick={() => {\n\t\t\t\t\t\thandelCardClick(index);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default Cards;\n","import React, { useReducer } from 'react';\nimport Cards from './Cards';\n\nconst initialState = {\n\tgameStart: false,\n\tgameOver: false,\n\tgameReset: false,\n};\n\nconst reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'START':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgameStart: action.payload,\n\t\t\t};\n\t\tcase 'OVER':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgameOver: action.payload,\n\t\t\t};\n\t\tcase 'RESET':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgameReset: action.payload,\n\t\t\t};\n\t\tcase 'RESTART':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgameStart: false,\n\t\t\t\tgameOver: false,\n\t\t\t\tgameReset: false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nfunction Game() {\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\n\treturn (\n\t\t<div className='game-container'>\n\t\t\t<div\n\t\t\t\tclassName={state.gameStart ? 'overlay hidden' : 'overlay'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (!state.gameStart) {\n\t\t\t\t\t\tdispatch({ type: 'START', payload: true });\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t></div>\n\t\t\t{state.gameReset ? (\n\t\t\t\t<button\n\t\t\t\t\tclassName='btn'\n\t\t\t\t\tonClick={() => dispatch({ type: 'RESTART' })}\n\t\t\t\t>\n\t\t\t\t\tReset\n\t\t\t\t</button>\n\t\t\t) : (\n\t\t\t\t<Cards state={state} dispatch={dispatch} />\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './components/Game';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Game />\n\t\t\t<a\n\t\t\t\thref='https://github.com/dheeraj-murali/memory-cards'\n\t\t\t\tclassName='btn'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noopener noreferrer'\n\t\t\t>\n\t\t\t\tView on GitHub\n\t\t\t</a>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}